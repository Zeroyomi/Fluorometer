Exportdata:
	name: 'exportdata'
	id:export_data
	BoxLayout:
		orientation: 'vertical'
		#FileChooserListView:
		FileChooserIconView:	
			id:filechooser
			size_hint:(1,0.8)
			multiselect: True
			#path:"F:\Python_project\Kivy\Fluorometer\Records"
			path:"/home/pi/Fluorometer/Records"
			#color:0, 0, 0, 1 
			on_selection:export_data.selected(filechooser.selection)
			
		Button:
			id:data_home
			size_hint:(1,0.2)
			text:"Menu"
			font_size:36
			background_normal: ''
			background_color: '#c40e25'
			on_release:app.reset_home()	

[FileListEntry@FloatLayout+TreeViewNode]:
    locked: False
    entries: []
    path: ctx.path
    # FIXME: is_selected is actually a read_only treeview property. In this
    # case, however, we're doing this because treeview only has single-selection
    # hardcoded in it. The fix to this would be to update treeview to allow
    # multiple selection.
    is_selected: self.path in ctx.controller().selection

    orientation: 'horizontal'
    size_hint_y: None
    height: '96dp' if dp(1) > 1 else '48dp'
    # Don't allow expansion of the ../ node
    is_leaf: not ctx.isdir or ctx.name.endswith('..' + ctx.sep) or self.locked
    on_touch_down: self.collide_point(*args[1].pos) and ctx.controller().entry_touched(self, args[1])
    on_touch_up: self.collide_point(*args[1].pos) and ctx.controller().entry_released(self, args[1])
    BoxLayout:
        pos: root.pos
        size_hint_x: None
        width: root.width - dp(10)
        Label:
            # --------------
            # CHANGE FONT COLOR
            # --------------
            color: 0, 0, 0, 1
            id: filename
			font_size: '36dp'
            text_size: self.width, None
            halign: 'left'
            shorten: True
            text: ctx.name
        Label:
            # --------------
            # CHANGE FONT COLOR
            # --------------
            color: 0, 0, 0, 1
			font_size: '36dp'
            text_size: self.width, None
            size_hint_x: None
            halign: 'right'
            text: '{}'.format(ctx.get_nice_size())			